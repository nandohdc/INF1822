msg="iY109QeFnfwKcwAE"
msgg="xkqlNAdSmAHB9tjy4kVuTY5eRaIxQ333Nbdgutb8xn3fV8Id5ReBfz3rRkhJP8ZmC6VjypHRmlHM306aKb39EjiV969qQ21dsYflSisSvNgAnnuWrK4uGTe9EV7Uj3xsAx4wEDzFEZpE2Qllrn3ONsbJsSVHjmDSiZQKYNGZgCmpQzN1bom3LC8QpLU9d2o5oTDqJXirhrRin5km09EVPMzGQNnwtsaT0fGY2aa6tin6Ooo1qJkR1UOKwdBpk6wn6JoQVM8WKgxQ183s0VDfoJmR87FtsTGpnrWJIqs0vWBOjG9IczkKBUyUtvVIkM0OrmN94QOfN1gH9O7oSFvd3l4yVmJTEZiIhC8jzZ2QKhH6fc4rpi7ahDun3gGuSxHEjymPHdS0Zjx8EFx4CPWw5JgHq31tufKQhvgBVTjjmgcEdSFUitW41EpBZXQMHppuRJ77CtI0XtUuPV9y0VzSFC29wiBz7ov7ublJr4VZZq4rdGaEtqlfkP5CyC4ex9erRFXnRKAQP9icy5EwkSGP9s4g5ex4E7VKmP8bGXDHm8N5elEID1kZguNGj6BXCK2k44pD8sg7J9Us3ZFXF2PcbmfMx6z48h1aZjMOE79tA3Kr974On0P61zD6bjDDNpuREsFBrUbsnudG69BkIVNkxRjncKdllrFXLn8GSz3MNSfvpQNJIAvwr6m6FFrC04KHwCXv4itvgYSQlrWmbGehgC56HHE27S8tbdgh7WoJM0ytZxsJ9qO62v7AMA6DbwUqA98iu3QKs61onUsk9qrjqmo9nKmCpN5zUg0xThqHp3MZkCKo76zOeBmf7scWo0IkA2ZVkfXiOUC6PEm9W9w1yRd827Ys9DBiOiI1kpBMkhP6YEQTJMXCIZW3hZ7bsswSrf9TmQPP5Flrlzli0KgrV03WlIikuaxbqugvnnkqlM78i9OEer7vO6NzroGNZP6sNep5nSQMjwYx9gmlHxhtL6wO7NPwOsOwMZj1RafmA85NdzdHgSU5aotXou8wB3KU"
msggg="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"

counter = 0
Time_start = tmr.now()
while (counter < 1000) do
    obj = crypto.encrypt("AES-ECB", "1234567890abcdef","iY109QeFnfwKcwAE")
    counter = counter + 1
end
Time_end = tmr.now()
print(crypto.toHex(obj))
Time_elapsed = (Time_end - Time_start)  
print(Time_elapsed)

File = file.open("result-aes-ecb-1024bytes.txt", "a+")
File.writeline(Time_elapsed)
File:close(); File = nil
